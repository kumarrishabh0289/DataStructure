"""
# Definition for a Node.
class Node:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""

class Solution:
    def connect(self, root: 'Node') -> 'Node':
        arr = {}
        level = 0
        
        inorder(root,level,arr)
        # for i in arr:
        #     for j in arr[i]:
        #         print("Level:Values",i,j.val)
        while arr:
            x = max(arr)
            y = arr[x]
            arr.pop(x,None)
            while len(y)!=1: 
                s = y.pop(0)
                s.next = y[0]
        return(root)
                
            
            
        
            
        
        
        
def inorder(root,level,arr):
    if root is None:
        return
    inorder(root.left,level+1,arr)
    if level + 1 not in arr:
        arr[level + 1] = [root]
    else:
        arr[level + 1].append(root)
    inorder(root.right,level+1,arr)
            
            
